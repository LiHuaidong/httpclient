<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="controller" />
	<context:component-scan base-package="service" />
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <!-- 设置返回字符串编码 -->
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	                <property name = "supportedMediaTypes">
	                    <list>
	                        <value>text/html;charset=UTF-8</value>
	                        <value>application/json;charset=UTF-8</value>
	                    </list>
	                </property>
	            </bean>
	            <!-- json转换器 -->
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	                <property name="supportedMediaTypes">
	                    <list>
	                        <value>text/html;charset=UTF-8</value>
	                        <value>application/json;charset=UTF-8</value>
	                    </list>
	                </property>
	            </bean>
	        </list>
	    </property>
	</bean>
	
	<!--创建httpclient的连接池 -->  
    <bean id="httpClientConnectionManager"  
        class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager"  
        destroy-method="shutdown">  
        <!-- 设置最大连接数 -->  
        <property name="maxTotal" value="200" />  
        <!-- 设置每个主机的并发数 -->  
        <property name="defaultMaxPerRoute" value="20" />  
    </bean>  
  
    <!-- 创建httpClient对象 -->  
    <!-- httpClient是由HttpClientBuilder通过build方法创建，这个可以设置连接池 -->  
    <!-- 1.创建HttpClientBuilder -->  
    <bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder">  
        <!--设置连接池 -->  
        <property name="connectionManager" ref="httpClientConnectionManager"></property>  
    </bean>  
    <!-- 2.创建httpClient -->  
    <!-- 通过httpClientBulider得到httpClient对象，并且设置httpClient为多利模式 -->  
    <!-- 要保证httpClient为多利，以为每次都是新的http请求 -->  
    <bean id="httpClient" class="org.apache.http.impl.client.CloseableHttpClient"  
        factory-bean="httpClientBuilder" factory-method="build" scope="prototype" />  
  
    <!-- 构造请求参数 -->  
    <bean id="requestConfigBuilder" class="org.apache.http.client.config.RequestConfig.Builder">  
        <!-- 创建连接的最长时间 -->  
        <property name="connectTimeout" value="1000" />  
        <!-- 从连接池中获取到连接的最长时间 -->  
        <property name="connectionRequestTimeout" value="500" />  
        <!-- 数据传输的最长时间 -->  
        <property name="socketTimeout" value="10000" />  
        <!-- 提交请求前测试连接是否可用 -->  
        <property name="staleConnectionCheckEnabled" value="true" />  
    </bean>  
    <bean id="requestConfig" class="org.apache.http.client.config.RequestConfig"  
        factory-bean="requestConfigBuilder" factory-method="build" />  
  
  
    <!--清理无效的http连接 -->  
    <bean class="service.IdleConnectionEvictor"  
        destroy-method="shutdown">  
        <constructor-arg index="0" ref="httpClientConnectionManager"></constructor-arg>  
    </bean>

</beans>